version: '3.4'

x-vars:
  volumes:
    frontend: &volumes-frontend
      - ./kbpartpicker/src:/app/src
      - ./kbpartpicker/public:/app/public
      - ./kbpartpicker/node_modules:/app/node_modules
    backend: &volumes-backend
      - ./kbpartpicker-backend/api:/api/api
      - ./kbpartpicker-backend/app:/api/app
      - ./kbpartpicker-backend/config:/api/config
      - ./kbpartpicker-backend/scrapers:/api/scrapers
      - ./kbpartpicker-backend/tests:/api/tests
      - ./kbpartpicker-backend/utils:/api/utils
      - ./kbpartpicker-backend/vendors:/api/vendors
  env-files:
    frontend: &env-files-frontend
      - ./kbpartpicker/.env.development.local
    backend: &env-files-backend
      - ./kbpartpicker-backend/config/.env

services:
  db:
    image: postgres:latest
    volumes:
      - ./config/kbpartpicker.sql:/docker-entrypoint-initdb.d/10-init.sql
    environment:
      - POSTGRES_USER=kbpp
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=kbpartpicker
    ports:
      - 5432:5432
    restart: always
    
  web:
    build:
      context: kbpartpicker
      dockerfile: Dockerfile
    user: kbpp
    volumes: *volumes-frontend
    env_file: *env-files-frontend
    ports:
      - 3000:3000
    stdin_open: true
    links:
      - api

  api:
    build: ./kbpartpicker-backend
    depends_on:
      - db
    user: kbpp
    volumes: *volumes-backend
    env_file: *env-files-backend
    ports:
      - 5000:5000
    command: >
      bash -c "python scrape.py
      && gunicorn -b 0.0.0.0:5000 run:app"
